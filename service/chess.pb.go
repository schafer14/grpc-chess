// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/chess.proto

package chess

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameMessageResponse_GameMessageResponseTypes int32

const (
	GameMessageResponse_OK           GameMessageResponse_GameMessageResponseTypes = 0
	GameMessageResponse_ILLEGAL_MOVE GameMessageResponse_GameMessageResponseTypes = 1
)

var GameMessageResponse_GameMessageResponseTypes_name = map[int32]string{
	0: "OK",
	1: "ILLEGAL_MOVE",
}

var GameMessageResponse_GameMessageResponseTypes_value = map[string]int32{
	"OK":           0,
	"ILLEGAL_MOVE": 1,
}

func (x GameMessageResponse_GameMessageResponseTypes) String() string {
	return proto.EnumName(GameMessageResponse_GameMessageResponseTypes_name, int32(x))
}

func (GameMessageResponse_GameMessageResponseTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{8, 0}
}

type ClientGameMessage_MessageType int32

const (
	ClientGameMessage_UCI                ClientGameMessage_MessageType = 0
	ClientGameMessage_GAME_STATE_REQUEST ClientGameMessage_MessageType = 1
)

var ClientGameMessage_MessageType_name = map[int32]string{
	0: "UCI",
	1: "GAME_STATE_REQUEST",
}

var ClientGameMessage_MessageType_value = map[string]int32{
	"UCI":                0,
	"GAME_STATE_REQUEST": 1,
}

func (x ClientGameMessage_MessageType) String() string {
	return proto.EnumName(ClientGameMessage_MessageType_name, int32(x))
}

func (ClientGameMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{9, 0}
}

type ServerGameMessage_MessageType int32

const (
	ServerGameMessage_UCI                 ServerGameMessage_MessageType = 0
	ServerGameMessage_GAME_STATE_RESPONSE ServerGameMessage_MessageType = 1
)

var ServerGameMessage_MessageType_name = map[int32]string{
	0: "UCI",
	1: "GAME_STATE_RESPONSE",
}

var ServerGameMessage_MessageType_value = map[string]int32{
	"UCI":                 0,
	"GAME_STATE_RESPONSE": 1,
}

func (x ServerGameMessage_MessageType) String() string {
	return proto.EnumName(ServerGameMessage_MessageType_name, int32(x))
}

func (ServerGameMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{13, 0}
}

type Person struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rating               int32    `protobuf:"varint,3,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{0}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type RatingFilter struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RatingFilter) Reset()         { *m = RatingFilter{} }
func (m *RatingFilter) String() string { return proto.CompactTextString(m) }
func (*RatingFilter) ProtoMessage()    {}
func (*RatingFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{1}
}

func (m *RatingFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatingFilter.Unmarshal(m, b)
}
func (m *RatingFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatingFilter.Marshal(b, m, deterministic)
}
func (m *RatingFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatingFilter.Merge(m, src)
}
func (m *RatingFilter) XXX_Size() int {
	return xxx_messageInfo_RatingFilter.Size(m)
}
func (m *RatingFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_RatingFilter.DiscardUnknown(m)
}

var xxx_messageInfo_RatingFilter proto.InternalMessageInfo

type GameProposals struct {
	TimeControl          *TimeControl `protobuf:"bytes,1,opt,name=timeControl,proto3" json:"timeControl,omitempty"`
	Opponent             *Person      `protobuf:"bytes,2,opt,name=opponent,proto3" json:"opponent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GameProposals) Reset()         { *m = GameProposals{} }
func (m *GameProposals) String() string { return proto.CompactTextString(m) }
func (*GameProposals) ProtoMessage()    {}
func (*GameProposals) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{2}
}

func (m *GameProposals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameProposals.Unmarshal(m, b)
}
func (m *GameProposals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameProposals.Marshal(b, m, deterministic)
}
func (m *GameProposals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameProposals.Merge(m, src)
}
func (m *GameProposals) XXX_Size() int {
	return xxx_messageInfo_GameProposals.Size(m)
}
func (m *GameProposals) XXX_DiscardUnknown() {
	xxx_messageInfo_GameProposals.DiscardUnknown(m)
}

var xxx_messageInfo_GameProposals proto.InternalMessageInfo

func (m *GameProposals) GetTimeControl() *TimeControl {
	if m != nil {
		return m.TimeControl
	}
	return nil
}

func (m *GameProposals) GetOpponent() *Person {
	if m != nil {
		return m.Opponent
	}
	return nil
}

type GameControls struct {
	TimeControl          *TimeControl  `protobuf:"bytes,1,opt,name=timeControl,proto3" json:"timeControl,omitempty"`
	RatingFilter         *RatingFilter `protobuf:"bytes,2,opt,name=ratingFilter,proto3" json:"ratingFilter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GameControls) Reset()         { *m = GameControls{} }
func (m *GameControls) String() string { return proto.CompactTextString(m) }
func (*GameControls) ProtoMessage()    {}
func (*GameControls) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{3}
}

func (m *GameControls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameControls.Unmarshal(m, b)
}
func (m *GameControls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameControls.Marshal(b, m, deterministic)
}
func (m *GameControls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameControls.Merge(m, src)
}
func (m *GameControls) XXX_Size() int {
	return xxx_messageInfo_GameControls.Size(m)
}
func (m *GameControls) XXX_DiscardUnknown() {
	xxx_messageInfo_GameControls.DiscardUnknown(m)
}

var xxx_messageInfo_GameControls proto.InternalMessageInfo

func (m *GameControls) GetTimeControl() *TimeControl {
	if m != nil {
		return m.TimeControl
	}
	return nil
}

func (m *GameControls) GetRatingFilter() *RatingFilter {
	if m != nil {
		return m.RatingFilter
	}
	return nil
}

type Confimation struct {
	ConfimationCode      string   `protobuf:"bytes,1,opt,name=confimationCode,proto3" json:"confimationCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Confimation) Reset()         { *m = Confimation{} }
func (m *Confimation) String() string { return proto.CompactTextString(m) }
func (*Confimation) ProtoMessage()    {}
func (*Confimation) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{4}
}

func (m *Confimation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confimation.Unmarshal(m, b)
}
func (m *Confimation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confimation.Marshal(b, m, deterministic)
}
func (m *Confimation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confimation.Merge(m, src)
}
func (m *Confimation) XXX_Size() int {
	return xxx_messageInfo_Confimation.Size(m)
}
func (m *Confimation) XXX_DiscardUnknown() {
	xxx_messageInfo_Confimation.DiscardUnknown(m)
}

var xxx_messageInfo_Confimation proto.InternalMessageInfo

func (m *Confimation) GetConfimationCode() string {
	if m != nil {
		return m.ConfimationCode
	}
	return ""
}

type RoomRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomRequest) Reset()         { *m = RoomRequest{} }
func (m *RoomRequest) String() string { return proto.CompactTextString(m) }
func (*RoomRequest) ProtoMessage()    {}
func (*RoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{5}
}

func (m *RoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomRequest.Unmarshal(m, b)
}
func (m *RoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomRequest.Marshal(b, m, deterministic)
}
func (m *RoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomRequest.Merge(m, src)
}
func (m *RoomRequest) XXX_Size() int {
	return xxx_messageInfo_RoomRequest.Size(m)
}
func (m *RoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoomRequest proto.InternalMessageInfo

type RoomMessage struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomMessage) Reset()         { *m = RoomMessage{} }
func (m *RoomMessage) String() string { return proto.CompactTextString(m) }
func (*RoomMessage) ProtoMessage()    {}
func (*RoomMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{6}
}

func (m *RoomMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomMessage.Unmarshal(m, b)
}
func (m *RoomMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomMessage.Marshal(b, m, deterministic)
}
func (m *RoomMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomMessage.Merge(m, src)
}
func (m *RoomMessage) XXX_Size() int {
	return xxx_messageInfo_RoomMessage.Size(m)
}
func (m *RoomMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RoomMessage proto.InternalMessageInfo

func (m *RoomMessage) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type GameRequestMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRequestMessage) Reset()         { *m = GameRequestMessage{} }
func (m *GameRequestMessage) String() string { return proto.CompactTextString(m) }
func (*GameRequestMessage) ProtoMessage()    {}
func (*GameRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{7}
}

func (m *GameRequestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRequestMessage.Unmarshal(m, b)
}
func (m *GameRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRequestMessage.Marshal(b, m, deterministic)
}
func (m *GameRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRequestMessage.Merge(m, src)
}
func (m *GameRequestMessage) XXX_Size() int {
	return xxx_messageInfo_GameRequestMessage.Size(m)
}
func (m *GameRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GameRequestMessage proto.InternalMessageInfo

func (m *GameRequestMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GameMessageResponse struct {
	Type                 GameMessageResponse_GameMessageResponseTypes `protobuf:"varint,1,opt,name=type,proto3,enum=GameMessageResponse_GameMessageResponseTypes" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *GameMessageResponse) Reset()         { *m = GameMessageResponse{} }
func (m *GameMessageResponse) String() string { return proto.CompactTextString(m) }
func (*GameMessageResponse) ProtoMessage()    {}
func (*GameMessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{8}
}

func (m *GameMessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameMessageResponse.Unmarshal(m, b)
}
func (m *GameMessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameMessageResponse.Marshal(b, m, deterministic)
}
func (m *GameMessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameMessageResponse.Merge(m, src)
}
func (m *GameMessageResponse) XXX_Size() int {
	return xxx_messageInfo_GameMessageResponse.Size(m)
}
func (m *GameMessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameMessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameMessageResponse proto.InternalMessageInfo

func (m *GameMessageResponse) GetType() GameMessageResponse_GameMessageResponseTypes {
	if m != nil {
		return m.Type
	}
	return GameMessageResponse_OK
}

type ClientGameMessage struct {
	MessageType          ClientGameMessage_MessageType `protobuf:"varint,1,opt,name=messageType,proto3,enum=ClientGameMessage_MessageType" json:"messageType,omitempty"`
	UciMessage           string                        `protobuf:"bytes,2,opt,name=uciMessage,proto3" json:"uciMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ClientGameMessage) Reset()         { *m = ClientGameMessage{} }
func (m *ClientGameMessage) String() string { return proto.CompactTextString(m) }
func (*ClientGameMessage) ProtoMessage()    {}
func (*ClientGameMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{9}
}

func (m *ClientGameMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientGameMessage.Unmarshal(m, b)
}
func (m *ClientGameMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientGameMessage.Marshal(b, m, deterministic)
}
func (m *ClientGameMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientGameMessage.Merge(m, src)
}
func (m *ClientGameMessage) XXX_Size() int {
	return xxx_messageInfo_ClientGameMessage.Size(m)
}
func (m *ClientGameMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientGameMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientGameMessage proto.InternalMessageInfo

func (m *ClientGameMessage) GetMessageType() ClientGameMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return ClientGameMessage_UCI
}

func (m *ClientGameMessage) GetUciMessage() string {
	if m != nil {
		return m.UciMessage
	}
	return ""
}

type GameState struct {
	Fen                  string       `protobuf:"bytes,1,opt,name=fen,proto3" json:"fen,omitempty"`
	TimeControl          *TimeControl `protobuf:"bytes,2,opt,name=timeControl,proto3" json:"timeControl,omitempty"`
	TimeState            *TimeState   `protobuf:"bytes,3,opt,name=timeState,proto3" json:"timeState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GameState) Reset()         { *m = GameState{} }
func (m *GameState) String() string { return proto.CompactTextString(m) }
func (*GameState) ProtoMessage()    {}
func (*GameState) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{10}
}

func (m *GameState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameState.Unmarshal(m, b)
}
func (m *GameState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameState.Marshal(b, m, deterministic)
}
func (m *GameState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameState.Merge(m, src)
}
func (m *GameState) XXX_Size() int {
	return xxx_messageInfo_GameState.Size(m)
}
func (m *GameState) XXX_DiscardUnknown() {
	xxx_messageInfo_GameState.DiscardUnknown(m)
}

var xxx_messageInfo_GameState proto.InternalMessageInfo

func (m *GameState) GetFen() string {
	if m != nil {
		return m.Fen
	}
	return ""
}

func (m *GameState) GetTimeControl() *TimeControl {
	if m != nil {
		return m.TimeControl
	}
	return nil
}

func (m *GameState) GetTimeState() *TimeState {
	if m != nil {
		return m.TimeState
	}
	return nil
}

type TimeControl struct {
	Time                 int32    `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	Incremet             int32    `protobuf:"varint,2,opt,name=incremet,proto3" json:"incremet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeControl) Reset()         { *m = TimeControl{} }
func (m *TimeControl) String() string { return proto.CompactTextString(m) }
func (*TimeControl) ProtoMessage()    {}
func (*TimeControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{11}
}

func (m *TimeControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeControl.Unmarshal(m, b)
}
func (m *TimeControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeControl.Marshal(b, m, deterministic)
}
func (m *TimeControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeControl.Merge(m, src)
}
func (m *TimeControl) XXX_Size() int {
	return xxx_messageInfo_TimeControl.Size(m)
}
func (m *TimeControl) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeControl.DiscardUnknown(m)
}

var xxx_messageInfo_TimeControl proto.InternalMessageInfo

func (m *TimeControl) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *TimeControl) GetIncremet() int32 {
	if m != nil {
		return m.Incremet
	}
	return 0
}

type TimeState struct {
	WhiteTimeRemaining   int32    `protobuf:"varint,1,opt,name=whiteTimeRemaining,proto3" json:"whiteTimeRemaining,omitempty"`
	BlackTimeRemaining   int32    `protobuf:"varint,2,opt,name=blackTimeRemaining,proto3" json:"blackTimeRemaining,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimeState) Reset()         { *m = TimeState{} }
func (m *TimeState) String() string { return proto.CompactTextString(m) }
func (*TimeState) ProtoMessage()    {}
func (*TimeState) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{12}
}

func (m *TimeState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeState.Unmarshal(m, b)
}
func (m *TimeState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeState.Marshal(b, m, deterministic)
}
func (m *TimeState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeState.Merge(m, src)
}
func (m *TimeState) XXX_Size() int {
	return xxx_messageInfo_TimeState.Size(m)
}
func (m *TimeState) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeState.DiscardUnknown(m)
}

var xxx_messageInfo_TimeState proto.InternalMessageInfo

func (m *TimeState) GetWhiteTimeRemaining() int32 {
	if m != nil {
		return m.WhiteTimeRemaining
	}
	return 0
}

func (m *TimeState) GetBlackTimeRemaining() int32 {
	if m != nil {
		return m.BlackTimeRemaining
	}
	return 0
}

type ServerGameMessage struct {
	MessageType          ServerGameMessage_MessageType `protobuf:"varint,1,opt,name=messageType,proto3,enum=ServerGameMessage_MessageType" json:"messageType,omitempty"`
	UciMessage           string                        `protobuf:"bytes,2,opt,name=uciMessage,proto3" json:"uciMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ServerGameMessage) Reset()         { *m = ServerGameMessage{} }
func (m *ServerGameMessage) String() string { return proto.CompactTextString(m) }
func (*ServerGameMessage) ProtoMessage()    {}
func (*ServerGameMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdc17040449aa6b8, []int{13}
}

func (m *ServerGameMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerGameMessage.Unmarshal(m, b)
}
func (m *ServerGameMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerGameMessage.Marshal(b, m, deterministic)
}
func (m *ServerGameMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerGameMessage.Merge(m, src)
}
func (m *ServerGameMessage) XXX_Size() int {
	return xxx_messageInfo_ServerGameMessage.Size(m)
}
func (m *ServerGameMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerGameMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ServerGameMessage proto.InternalMessageInfo

func (m *ServerGameMessage) GetMessageType() ServerGameMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return ServerGameMessage_UCI
}

func (m *ServerGameMessage) GetUciMessage() string {
	if m != nil {
		return m.UciMessage
	}
	return ""
}

func init() {
	proto.RegisterEnum("GameMessageResponse_GameMessageResponseTypes", GameMessageResponse_GameMessageResponseTypes_name, GameMessageResponse_GameMessageResponseTypes_value)
	proto.RegisterEnum("ClientGameMessage_MessageType", ClientGameMessage_MessageType_name, ClientGameMessage_MessageType_value)
	proto.RegisterEnum("ServerGameMessage_MessageType", ServerGameMessage_MessageType_name, ServerGameMessage_MessageType_value)
	proto.RegisterType((*Person)(nil), "Person")
	proto.RegisterType((*RatingFilter)(nil), "RatingFilter")
	proto.RegisterType((*GameProposals)(nil), "GameProposals")
	proto.RegisterType((*GameControls)(nil), "GameControls")
	proto.RegisterType((*Confimation)(nil), "Confimation")
	proto.RegisterType((*RoomRequest)(nil), "RoomRequest")
	proto.RegisterType((*RoomMessage)(nil), "RoomMessage")
	proto.RegisterType((*GameRequestMessage)(nil), "GameRequestMessage")
	proto.RegisterType((*GameMessageResponse)(nil), "GameMessageResponse")
	proto.RegisterType((*ClientGameMessage)(nil), "ClientGameMessage")
	proto.RegisterType((*GameState)(nil), "GameState")
	proto.RegisterType((*TimeControl)(nil), "TimeControl")
	proto.RegisterType((*TimeState)(nil), "TimeState")
	proto.RegisterType((*ServerGameMessage)(nil), "ServerGameMessage")
}

func init() { proto.RegisterFile("service/chess.proto", fileDescriptor_cdc17040449aa6b8) }

var fileDescriptor_cdc17040449aa6b8 = []byte{
	// 666 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdb, 0x4e, 0xdb, 0x4c,
	0x10, 0x8e, 0x03, 0x04, 0x32, 0x76, 0xf2, 0x9b, 0xcd, 0x2f, 0x1a, 0xe5, 0x82, 0xa2, 0x6d, 0x2f,
	0x72, 0xd3, 0x85, 0xa6, 0x95, 0x50, 0xa5, 0x56, 0x6a, 0x94, 0xba, 0x08, 0x95, 0x14, 0xba, 0x09,
	0xbd, 0x45, 0xc6, 0x99, 0xc0, 0x8a, 0x78, 0xd7, 0xd8, 0x0b, 0x88, 0x97, 0xe8, 0x5b, 0x94, 0xe7,
	0xac, 0xbc, 0x36, 0xc4, 0x21, 0x41, 0x3d, 0xdc, 0xcd, 0xe1, 0x9b, 0xc3, 0xee, 0xcc, 0x37, 0xd0,
	0x48, 0x30, 0xbe, 0x16, 0x01, 0x6e, 0x07, 0xe7, 0x98, 0x24, 0x2c, 0x8a, 0x95, 0x56, 0xf4, 0x13,
	0x54, 0x8e, 0x30, 0x4e, 0x94, 0x24, 0x75, 0x28, 0x8b, 0x51, 0xd3, 0xda, 0xb2, 0xda, 0x55, 0x5e,
	0x16, 0x23, 0x42, 0x60, 0x59, 0xfa, 0x21, 0x36, 0xcb, 0xc6, 0x62, 0x64, 0xb2, 0x01, 0x95, 0xd8,
	0xd7, 0x42, 0x9e, 0x35, 0x97, 0xb6, 0xac, 0xf6, 0x0a, 0xcf, 0x35, 0x5a, 0x07, 0x87, 0x1b, 0xe9,
	0xb3, 0x98, 0x68, 0x8c, 0xe9, 0x08, 0x6a, 0x7b, 0x7e, 0x88, 0x47, 0xb1, 0x8a, 0x54, 0xe2, 0x4f,
	0x12, 0xc2, 0xc0, 0xd6, 0x22, 0xc4, 0x9e, 0x92, 0x3a, 0x56, 0x13, 0x53, 0xc5, 0xee, 0x38, 0x6c,
	0x38, 0xb5, 0xf1, 0x22, 0x80, 0xbc, 0x80, 0x35, 0x15, 0x45, 0x4a, 0xa2, 0xd4, 0xa6, 0x01, 0xbb,
	0xb3, 0xca, 0xb2, 0x3e, 0xf9, 0x83, 0x83, 0x5e, 0x82, 0x93, 0x56, 0xc9, 0x63, 0xfe, 0xbe, 0xc8,
	0x6b, 0x70, 0xe2, 0x42, 0xd7, 0x79, 0xa1, 0x1a, 0x2b, 0x3e, 0x85, 0xcf, 0x40, 0xe8, 0x2e, 0xd8,
	0x3d, 0x25, 0xc7, 0x22, 0xf4, 0xb5, 0x50, 0x92, 0xb4, 0xe1, 0xbf, 0x60, 0xaa, 0xf6, 0xd4, 0x08,
	0xf3, 0x0f, 0x7c, 0x6c, 0xa6, 0x35, 0xb0, 0xb9, 0x52, 0x21, 0xc7, 0xcb, 0x2b, 0x4c, 0x34, 0x7d,
	0x9e, 0xa9, 0x7d, 0x4c, 0x12, 0xff, 0x0c, 0x89, 0x0b, 0x4b, 0x61, 0x72, 0x96, 0xc7, 0xa6, 0x22,
	0x7d, 0x09, 0x24, 0x7d, 0x5b, 0x8e, 0xbf, 0xc7, 0x3d, 0x9a, 0x11, 0xfd, 0x61, 0x41, 0x23, 0x85,
	0xe5, 0x7e, 0x8e, 0x49, 0xa4, 0x64, 0x82, 0xa4, 0x0b, 0xcb, 0xfa, 0x36, 0xca, 0x9a, 0xa9, 0x77,
	0x5e, 0xb1, 0x05, 0x98, 0x45, 0xb6, 0xe1, 0x6d, 0x84, 0x09, 0x37, 0xa1, 0xf4, 0x2d, 0x34, 0x9f,
	0x42, 0x90, 0x0a, 0x94, 0x0f, 0xbf, 0xb8, 0x25, 0xe2, 0x82, 0xb3, 0x7f, 0x70, 0xe0, 0xed, 0x75,
	0x0f, 0x4e, 0xfa, 0x87, 0xdf, 0x3d, 0xd7, 0xa2, 0x3f, 0x2d, 0x58, 0xef, 0x4d, 0x04, 0x4a, 0x5d,
	0x08, 0x26, 0x1f, 0xc1, 0x0e, 0x33, 0x71, 0x38, 0xed, 0x6a, 0x93, 0xcd, 0x01, 0x59, 0x7f, 0x8a,
	0xe2, 0xc5, 0x10, 0xb2, 0x09, 0x70, 0x15, 0x88, 0xdc, 0x9d, 0xaf, 0x64, 0xc1, 0x42, 0x19, 0xd8,
	0x85, 0x58, 0xb2, 0x0a, 0x4b, 0xc7, 0xbd, 0x7d, 0xb7, 0x44, 0x36, 0x80, 0xec, 0x75, 0xfb, 0xde,
	0xc9, 0x60, 0xd8, 0x1d, 0x7a, 0x27, 0xdc, 0xfb, 0x76, 0xec, 0x0d, 0x86, 0xae, 0x45, 0x6f, 0xa0,
	0x9a, 0xd6, 0x1d, 0x68, 0x5f, 0x9b, 0xdf, 0x1f, 0xa3, 0xbc, 0xff, 0xfd, 0x31, 0xca, 0xc7, 0x9b,
	0x54, 0xfe, 0xdd, 0x26, 0xb5, 0xa1, 0x9a, 0xaa, 0x26, 0x9d, 0xa1, 0x86, 0xdd, 0x01, 0x83, 0x36,
	0x16, 0x3e, 0x75, 0xd2, 0x0f, 0x60, 0x17, 0xb2, 0xa4, 0x24, 0x4b, 0x7d, 0xa6, 0xf6, 0x0a, 0x37,
	0x32, 0x69, 0xc1, 0x9a, 0x90, 0x41, 0x8c, 0x21, 0x66, 0xbb, 0xbf, 0xc2, 0x1f, 0x74, 0x7a, 0x01,
	0xd5, 0x87, 0xb4, 0x84, 0x01, 0xb9, 0x39, 0x17, 0x1a, 0x53, 0x0b, 0xc7, 0xd0, 0x17, 0x32, 0x65,
	0x66, 0x96, 0x6a, 0x81, 0x27, 0xc5, 0x9f, 0x4e, 0xfc, 0xe0, 0x62, 0x16, 0x9f, 0x95, 0x58, 0xe0,
	0xa1, 0x77, 0x16, 0xac, 0x0f, 0x30, 0xbe, 0xc6, 0xf8, 0x0f, 0x86, 0x39, 0x07, 0xfc, 0xf7, 0x61,
	0x6e, 0x3f, 0x31, 0xcc, 0x67, 0xd0, 0x98, 0x19, 0xe6, 0xe0, 0xe8, 0xf0, 0xeb, 0xc0, 0x73, 0xad,
	0xce, 0x5d, 0x19, 0xdc, 0x5e, 0x7a, 0xd4, 0xba, 0x51, 0x34, 0x11, 0x41, 0xc6, 0xcd, 0x77, 0x00,
	0xd9, 0x88, 0x63, 0xf4, 0x43, 0xd2, 0x60, 0xf3, 0x74, 0x6a, 0x91, 0xf9, 0xae, 0x69, 0x69, 0xc7,
	0x22, 0xef, 0xb3, 0xd0, 0x6e, 0x60, 0x12, 0x91, 0xf9, 0x45, 0x6d, 0xfd, 0xbf, 0x88, 0x3e, 0xb4,
	0xd4, 0xb6, 0x76, 0x2c, 0xc2, 0xc0, 0xe9, 0xfb, 0x42, 0xf6, 0xce, 0x7d, 0x9d, 0x72, 0x9c, 0x38,
	0xac, 0xc0, 0xfc, 0x56, 0xa6, 0x15, 0xab, 0xed, 0x80, 0x5d, 0xe8, 0x8d, 0xd4, 0x58, 0xf1, 0xa8,
	0xb5, 0xea, 0x6c, 0xe6, 0x92, 0x9a, 0x88, 0x5d, 0x70, 0x73, 0xcc, 0x58, 0xc4, 0xf9, 0x29, 0x5a,
	0xf8, 0x40, 0x87, 0x15, 0xae, 0x15, 0x2d, 0x9d, 0x56, 0xcc, 0xd1, 0x7f, 0xf3, 0x2b, 0x00, 0x00,
	0xff, 0xff, 0x1f, 0x41, 0xbb, 0x9d, 0x0b, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChessApplicationClient is the client API for ChessApplication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChessApplicationClient interface {
	GameStream(ctx context.Context, in *GameRequestMessage, opts ...grpc.CallOption) (ChessApplication_GameStreamClient, error)
	GameAction(ctx context.Context, opts ...grpc.CallOption) (ChessApplication_GameActionClient, error)
	MainChatRoom(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (ChessApplication_MainChatRoomClient, error)
	GameRequest(ctx context.Context, in *GameControls, opts ...grpc.CallOption) (ChessApplication_GameRequestClient, error)
	GameConfirmation(ctx context.Context, in *GameRequestMessage, opts ...grpc.CallOption) (*Confimation, error)
}

type chessApplicationClient struct {
	cc *grpc.ClientConn
}

func NewChessApplicationClient(cc *grpc.ClientConn) ChessApplicationClient {
	return &chessApplicationClient{cc}
}

func (c *chessApplicationClient) GameStream(ctx context.Context, in *GameRequestMessage, opts ...grpc.CallOption) (ChessApplication_GameStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChessApplication_serviceDesc.Streams[0], "/ChessApplication/GameStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &chessApplicationGameStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChessApplication_GameStreamClient interface {
	Recv() (*ServerGameMessage, error)
	grpc.ClientStream
}

type chessApplicationGameStreamClient struct {
	grpc.ClientStream
}

func (x *chessApplicationGameStreamClient) Recv() (*ServerGameMessage, error) {
	m := new(ServerGameMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chessApplicationClient) GameAction(ctx context.Context, opts ...grpc.CallOption) (ChessApplication_GameActionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChessApplication_serviceDesc.Streams[1], "/ChessApplication/GameAction", opts...)
	if err != nil {
		return nil, err
	}
	x := &chessApplicationGameActionClient{stream}
	return x, nil
}

type ChessApplication_GameActionClient interface {
	Send(*ClientGameMessage) error
	Recv() (*GameMessageResponse, error)
	grpc.ClientStream
}

type chessApplicationGameActionClient struct {
	grpc.ClientStream
}

func (x *chessApplicationGameActionClient) Send(m *ClientGameMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chessApplicationGameActionClient) Recv() (*GameMessageResponse, error) {
	m := new(GameMessageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chessApplicationClient) MainChatRoom(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (ChessApplication_MainChatRoomClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChessApplication_serviceDesc.Streams[2], "/ChessApplication/MainChatRoom", opts...)
	if err != nil {
		return nil, err
	}
	x := &chessApplicationMainChatRoomClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChessApplication_MainChatRoomClient interface {
	Recv() (*RoomMessage, error)
	grpc.ClientStream
}

type chessApplicationMainChatRoomClient struct {
	grpc.ClientStream
}

func (x *chessApplicationMainChatRoomClient) Recv() (*RoomMessage, error) {
	m := new(RoomMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chessApplicationClient) GameRequest(ctx context.Context, in *GameControls, opts ...grpc.CallOption) (ChessApplication_GameRequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChessApplication_serviceDesc.Streams[3], "/ChessApplication/GameRequest", opts...)
	if err != nil {
		return nil, err
	}
	x := &chessApplicationGameRequestClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChessApplication_GameRequestClient interface {
	Recv() (*GameProposals, error)
	grpc.ClientStream
}

type chessApplicationGameRequestClient struct {
	grpc.ClientStream
}

func (x *chessApplicationGameRequestClient) Recv() (*GameProposals, error) {
	m := new(GameProposals)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chessApplicationClient) GameConfirmation(ctx context.Context, in *GameRequestMessage, opts ...grpc.CallOption) (*Confimation, error) {
	out := new(Confimation)
	err := c.cc.Invoke(ctx, "/ChessApplication/GameConfirmation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChessApplicationServer is the server API for ChessApplication service.
type ChessApplicationServer interface {
	GameStream(*GameRequestMessage, ChessApplication_GameStreamServer) error
	GameAction(ChessApplication_GameActionServer) error
	MainChatRoom(*RoomRequest, ChessApplication_MainChatRoomServer) error
	GameRequest(*GameControls, ChessApplication_GameRequestServer) error
	GameConfirmation(context.Context, *GameRequestMessage) (*Confimation, error)
}

// UnimplementedChessApplicationServer can be embedded to have forward compatible implementations.
type UnimplementedChessApplicationServer struct {
}

func (*UnimplementedChessApplicationServer) GameStream(req *GameRequestMessage, srv ChessApplication_GameStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GameStream not implemented")
}
func (*UnimplementedChessApplicationServer) GameAction(srv ChessApplication_GameActionServer) error {
	return status.Errorf(codes.Unimplemented, "method GameAction not implemented")
}
func (*UnimplementedChessApplicationServer) MainChatRoom(req *RoomRequest, srv ChessApplication_MainChatRoomServer) error {
	return status.Errorf(codes.Unimplemented, "method MainChatRoom not implemented")
}
func (*UnimplementedChessApplicationServer) GameRequest(req *GameControls, srv ChessApplication_GameRequestServer) error {
	return status.Errorf(codes.Unimplemented, "method GameRequest not implemented")
}
func (*UnimplementedChessApplicationServer) GameConfirmation(ctx context.Context, req *GameRequestMessage) (*Confimation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GameConfirmation not implemented")
}

func RegisterChessApplicationServer(s *grpc.Server, srv ChessApplicationServer) {
	s.RegisterService(&_ChessApplication_serviceDesc, srv)
}

func _ChessApplication_GameStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GameRequestMessage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChessApplicationServer).GameStream(m, &chessApplicationGameStreamServer{stream})
}

type ChessApplication_GameStreamServer interface {
	Send(*ServerGameMessage) error
	grpc.ServerStream
}

type chessApplicationGameStreamServer struct {
	grpc.ServerStream
}

func (x *chessApplicationGameStreamServer) Send(m *ServerGameMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _ChessApplication_GameAction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChessApplicationServer).GameAction(&chessApplicationGameActionServer{stream})
}

type ChessApplication_GameActionServer interface {
	Send(*GameMessageResponse) error
	Recv() (*ClientGameMessage, error)
	grpc.ServerStream
}

type chessApplicationGameActionServer struct {
	grpc.ServerStream
}

func (x *chessApplicationGameActionServer) Send(m *GameMessageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chessApplicationGameActionServer) Recv() (*ClientGameMessage, error) {
	m := new(ClientGameMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ChessApplication_MainChatRoom_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RoomRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChessApplicationServer).MainChatRoom(m, &chessApplicationMainChatRoomServer{stream})
}

type ChessApplication_MainChatRoomServer interface {
	Send(*RoomMessage) error
	grpc.ServerStream
}

type chessApplicationMainChatRoomServer struct {
	grpc.ServerStream
}

func (x *chessApplicationMainChatRoomServer) Send(m *RoomMessage) error {
	return x.ServerStream.SendMsg(m)
}

func _ChessApplication_GameRequest_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GameControls)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChessApplicationServer).GameRequest(m, &chessApplicationGameRequestServer{stream})
}

type ChessApplication_GameRequestServer interface {
	Send(*GameProposals) error
	grpc.ServerStream
}

type chessApplicationGameRequestServer struct {
	grpc.ServerStream
}

func (x *chessApplicationGameRequestServer) Send(m *GameProposals) error {
	return x.ServerStream.SendMsg(m)
}

func _ChessApplication_GameConfirmation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChessApplicationServer).GameConfirmation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ChessApplication/GameConfirmation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChessApplicationServer).GameConfirmation(ctx, req.(*GameRequestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChessApplication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ChessApplication",
	HandlerType: (*ChessApplicationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GameConfirmation",
			Handler:    _ChessApplication_GameConfirmation_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GameStream",
			Handler:       _ChessApplication_GameStream_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GameAction",
			Handler:       _ChessApplication_GameAction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "MainChatRoom",
			Handler:       _ChessApplication_MainChatRoom_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GameRequest",
			Handler:       _ChessApplication_GameRequest_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "service/chess.proto",
}
